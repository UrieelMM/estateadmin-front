// vite.config.ts
import { sentryVitePlugin } from "file:///Users/urieelmm/Documents/Code/estateadmin-front/node_modules/@sentry/vite-plugin/dist/esm/index.mjs";
import { defineConfig } from "file:///Users/urieelmm/Documents/Code/estateadmin-front/node_modules/vite/dist/node/index.js";
import react from "file:///Users/urieelmm/Documents/Code/estateadmin-front/node_modules/@vitejs/plugin-react/dist/index.mjs";
import path from "path";
var __vite_injected_original_dirname = "/Users/urieelmm/Documents/Code/estateadmin-front";
var vite_config_default = defineConfig({
  plugins: [react(), {
    name: "inject-sw-env",
    transform(code, id) {
      if (id.endsWith("firebase-messaging-sw.js")) {
        return code.replace(
          "FIREBASE_API_KEY",
          JSON.stringify(process.env.VITE_FIREBASE_APIKEY)
        ).replace(
          "FIREBASE_AUTH_DOMAIN",
          JSON.stringify(process.env.VITE_FIREBASE_AUTHDOMAIN)
        ).replace(
          "FIREBASE_PROJECT_ID",
          JSON.stringify(process.env.VITE_FIREBASE_PROJECTID)
        ).replace(
          "FIREBASE_STORAGE_BUCKET",
          JSON.stringify(process.env.VITE_FIREBASE_STORAGEBUCKET)
        ).replace(
          "FIREBASE_MESSAGING_SENDER_ID",
          JSON.stringify(process.env.VITE_FIREBASE_MESSAGINGSENDERID)
        ).replace(
          "FIREBASE_APP_ID",
          JSON.stringify(process.env.VITE_FIREBASE_APPID)
        );
      }
    }
  }, sentryVitePlugin({
    org: "omnipixel-nm",
    project: "javascript-react"
  })],
  resolve: {
    alias: {
      "@": path.resolve(__vite_injected_original_dirname, "./src")
    }
  },
  build: {
    sourcemap: true
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCIvVXNlcnMvdXJpZWVsbW0vRG9jdW1lbnRzL0NvZGUvZXN0YXRlYWRtaW4tZnJvbnRcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIi9Vc2Vycy91cmllZWxtbS9Eb2N1bWVudHMvQ29kZS9lc3RhdGVhZG1pbi1mcm9udC92aXRlLmNvbmZpZy50c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vVXNlcnMvdXJpZWVsbW0vRG9jdW1lbnRzL0NvZGUvZXN0YXRlYWRtaW4tZnJvbnQvdml0ZS5jb25maWcudHNcIjtpbXBvcnQgeyBzZW50cnlWaXRlUGx1Z2luIH0gZnJvbSBcIkBzZW50cnkvdml0ZS1wbHVnaW5cIjtcbmltcG9ydCB7IGRlZmluZUNvbmZpZyB9IGZyb20gXCJ2aXRlXCI7XG5pbXBvcnQgcmVhY3QgZnJvbSBcIkB2aXRlanMvcGx1Z2luLXJlYWN0XCI7XG5pbXBvcnQgcGF0aCBmcm9tIFwicGF0aFwiO1xuXG4vLyBodHRwczovL3ZpdGVqcy5kZXYvY29uZmlnL1xuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKHtcbiAgcGx1Z2luczogW3JlYWN0KCksIHtcbiAgICBuYW1lOiBcImluamVjdC1zdy1lbnZcIixcbiAgICB0cmFuc2Zvcm0oY29kZSwgaWQpIHtcbiAgICAgIGlmIChpZC5lbmRzV2l0aChcImZpcmViYXNlLW1lc3NhZ2luZy1zdy5qc1wiKSkge1xuICAgICAgICByZXR1cm4gY29kZVxuICAgICAgICAgIC5yZXBsYWNlKFxuICAgICAgICAgICAgXCJGSVJFQkFTRV9BUElfS0VZXCIsXG4gICAgICAgICAgICBKU09OLnN0cmluZ2lmeShwcm9jZXNzLmVudi5WSVRFX0ZJUkVCQVNFX0FQSUtFWSlcbiAgICAgICAgICApXG4gICAgICAgICAgLnJlcGxhY2UoXG4gICAgICAgICAgICBcIkZJUkVCQVNFX0FVVEhfRE9NQUlOXCIsXG4gICAgICAgICAgICBKU09OLnN0cmluZ2lmeShwcm9jZXNzLmVudi5WSVRFX0ZJUkVCQVNFX0FVVEhET01BSU4pXG4gICAgICAgICAgKVxuICAgICAgICAgIC5yZXBsYWNlKFxuICAgICAgICAgICAgXCJGSVJFQkFTRV9QUk9KRUNUX0lEXCIsXG4gICAgICAgICAgICBKU09OLnN0cmluZ2lmeShwcm9jZXNzLmVudi5WSVRFX0ZJUkVCQVNFX1BST0pFQ1RJRClcbiAgICAgICAgICApXG4gICAgICAgICAgLnJlcGxhY2UoXG4gICAgICAgICAgICBcIkZJUkVCQVNFX1NUT1JBR0VfQlVDS0VUXCIsXG4gICAgICAgICAgICBKU09OLnN0cmluZ2lmeShwcm9jZXNzLmVudi5WSVRFX0ZJUkVCQVNFX1NUT1JBR0VCVUNLRVQpXG4gICAgICAgICAgKVxuICAgICAgICAgIC5yZXBsYWNlKFxuICAgICAgICAgICAgXCJGSVJFQkFTRV9NRVNTQUdJTkdfU0VOREVSX0lEXCIsXG4gICAgICAgICAgICBKU09OLnN0cmluZ2lmeShwcm9jZXNzLmVudi5WSVRFX0ZJUkVCQVNFX01FU1NBR0lOR1NFTkRFUklEKVxuICAgICAgICAgIClcbiAgICAgICAgICAucmVwbGFjZShcbiAgICAgICAgICAgIFwiRklSRUJBU0VfQVBQX0lEXCIsXG4gICAgICAgICAgICBKU09OLnN0cmluZ2lmeShwcm9jZXNzLmVudi5WSVRFX0ZJUkVCQVNFX0FQUElEKVxuICAgICAgICAgICk7XG4gICAgICB9XG4gICAgfSxcbiAgfSwgc2VudHJ5Vml0ZVBsdWdpbih7XG4gICAgb3JnOiBcIm9tbmlwaXhlbC1ubVwiLFxuICAgIHByb2plY3Q6IFwiamF2YXNjcmlwdC1yZWFjdFwiXG4gIH0pXSxcblxuICByZXNvbHZlOiB7XG4gICAgYWxpYXM6IHtcbiAgICAgIFwiQFwiOiBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCBcIi4vc3JjXCIpLFxuICAgIH0sXG4gIH0sXG5cbiAgYnVpbGQ6IHtcbiAgICBzb3VyY2VtYXA6IHRydWVcbiAgfVxufSk7Il0sCiAgIm1hcHBpbmdzIjogIjtBQUFrVSxTQUFTLHdCQUF3QjtBQUNuVyxTQUFTLG9CQUFvQjtBQUM3QixPQUFPLFdBQVc7QUFDbEIsT0FBTyxVQUFVO0FBSGpCLElBQU0sbUNBQW1DO0FBTXpDLElBQU8sc0JBQVEsYUFBYTtBQUFBLEVBQzFCLFNBQVMsQ0FBQyxNQUFNLEdBQUc7QUFBQSxJQUNqQixNQUFNO0FBQUEsSUFDTixVQUFVLE1BQU0sSUFBSTtBQUNsQixVQUFJLEdBQUcsU0FBUywwQkFBMEIsR0FBRztBQUMzQyxlQUFPLEtBQ0o7QUFBQSxVQUNDO0FBQUEsVUFDQSxLQUFLLFVBQVUsUUFBUSxJQUFJLG9CQUFvQjtBQUFBLFFBQ2pELEVBQ0M7QUFBQSxVQUNDO0FBQUEsVUFDQSxLQUFLLFVBQVUsUUFBUSxJQUFJLHdCQUF3QjtBQUFBLFFBQ3JELEVBQ0M7QUFBQSxVQUNDO0FBQUEsVUFDQSxLQUFLLFVBQVUsUUFBUSxJQUFJLHVCQUF1QjtBQUFBLFFBQ3BELEVBQ0M7QUFBQSxVQUNDO0FBQUEsVUFDQSxLQUFLLFVBQVUsUUFBUSxJQUFJLDJCQUEyQjtBQUFBLFFBQ3hELEVBQ0M7QUFBQSxVQUNDO0FBQUEsVUFDQSxLQUFLLFVBQVUsUUFBUSxJQUFJLCtCQUErQjtBQUFBLFFBQzVELEVBQ0M7QUFBQSxVQUNDO0FBQUEsVUFDQSxLQUFLLFVBQVUsUUFBUSxJQUFJLG1CQUFtQjtBQUFBLFFBQ2hEO0FBQUEsTUFDSjtBQUFBLElBQ0Y7QUFBQSxFQUNGLEdBQUcsaUJBQWlCO0FBQUEsSUFDbEIsS0FBSztBQUFBLElBQ0wsU0FBUztBQUFBLEVBQ1gsQ0FBQyxDQUFDO0FBQUEsRUFFRixTQUFTO0FBQUEsSUFDUCxPQUFPO0FBQUEsTUFDTCxLQUFLLEtBQUssUUFBUSxrQ0FBVyxPQUFPO0FBQUEsSUFDdEM7QUFBQSxFQUNGO0FBQUEsRUFFQSxPQUFPO0FBQUEsSUFDTCxXQUFXO0FBQUEsRUFDYjtBQUNGLENBQUM7IiwKICAibmFtZXMiOiBbXQp9Cg==
